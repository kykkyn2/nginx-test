user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
  worker_connections  1024;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  include       conf.d/*.conf;

  server_tokens off;
  fastcgi_hide_header X-Powered-By;
  fastcgi_hide_header X-Pingback;

  map $http_upgrade $connection_upgrade {
    default     "upgrade";
  }

  server {
    listen        80 default_server;
    root /var/app/current/public;

    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    location / {

      proxy_pass          http://127.0.0.1:8080;
      proxy_http_version  1.1;

      proxy_set_header    Connection          $connection_upgrade;
      proxy_set_header    Upgrade             $http_upgrade;
      proxy_set_header    Host                $host;
      proxy_set_header    X-Real-IP           $remote_addr;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

      proxy_hide_header   X-Powered-By;
      proxy_hide_header   X-Pingback;

    }

    access_log    /var/log/nginx/access.log main;

    client_header_timeout 60;
    client_body_timeout   60;
    keepalive_timeout     60;
    gzip                  off;
    gzip_comp_level       4;

    # Include the Elastic Beanstalk generated locations
    include conf.d/elasticbeanstalk/01_static.conf;
    include conf.d/elasticbeanstalk/healthd.conf;

    # Block dot file (.htaccess .htpasswd .svn .git .env and so on.)
    location ~ /\. {
      deny all;
    }

    # Block (log file, binary, certificate, shell script, sql dump file) access.
    location ~* \.(log|binary|pem|enc|crt|conf|cnf|sql|sh|key|yml|lock)$ {
      deny all;
    }

    # Block access
    location ~* (composer\.json|composer\.lock|composer\.phar|contributing\.md|license\.txt|readme\.rst|readme\.md|readme\.txt|copyright|artisan|gulpfile\.js|package\.json|phpunit\.xml|access_log|error_log|gruntfile\.js)$ {
      deny all;
    }

    location = /favicon.ico {
      log_not_found off;
      access_log off;
    }

    location = /robots.txt {
      log_not_found off;
      access_log off;
    }

  }

}